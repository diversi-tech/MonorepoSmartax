# # Use a Node.js base image for building the Angular app
# FROM node:20.16.0-alpine as build
# # Set the working directory inside the Docker container
# WORKDIR /app/front
# # Copy package.json and package-lock.json to the working directory
# COPY ../../package*.json ./
# # Install dependencies
# RUN npm install
# # Copy the entire Angular project to the working directory
# COPY . .
# # Build the Angular project (ensure you have a build script defined in package.json)
# RUN npm run build --prod
# # Use Nginx to serve the Angular app
# FROM nginx:alpine
# # Copy the built Angular app from the previous stage
# COPY --from=build /app/front/dist/front /usr/share/nginx/html
# # Expose port 80
# EXPOSE 80

# Use a Node.js base image for building the Angular app
FROM node:20.16.0-alpine as build
# Set the working directory inside the Docker container
WORKDIR /app/front
# Copy package.json and package-lock.json to the working directory
COPY ../../package*.json ./
# Install dependencies
RUN npm install
# Copy the entire Angular project to the working directory
COPY . .
# Build the Angular project (ensure you have a build script defined in package.json)
RUN npm run build --prod
# Use Nginx to serve the Angular app
FROM nginx:alpine
# Copy the built Angular app from the previous stage
COPY --from=build /app/front/dist/front /usr/share/nginx/html
# Expose port 80
EXPOSE 80
# Run Nginx
CMD ["nginx", "-g", "daemon off;"]
